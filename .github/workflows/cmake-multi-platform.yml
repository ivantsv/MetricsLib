name: C++ CI/CD Multiplatform

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug

jobs:
  build_and_test:
    name: Build & Test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [gcc, msvc, clang]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Install vcpkg dependencies
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg.exe install zlib

    - name: Configure CMake (Ubuntu)
      if: runner.os == 'Linux'
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
      
    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake"

    - name: Build Project
      run: cmake --build build --config Release -j

    - name: Run Google Tests
      run: |
        cd build
        ctest --output-on-failure
